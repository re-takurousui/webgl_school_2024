// 必要なモジュールを読み込み
import * as THREE from './lib/three.module.js';
import { OrbitControls } from './lib/OrbitControls.js';

window.addEventListener('DOMContentLoaded', async () => {
  const wrapper = document.querySelector('#webgl');
  const app = new ThreeApp(wrapper);
  app.init();
  app.render();
}, false);

class ThreeApp {
  /**
   * 月に掛けるスケール
   */
  static MOON_SCALE = 0.27;
  /**
   * 月と地球の間の距離
   */
  static MOON_DISTANCE = 3.0;
  /**
   * 人工衛星の移動速度
   */
  static SATELLITE_SPEED = 0.05;
  /**
   * 人工衛星の曲がる力 @@@
   */
  static SATELLITE_TURN_SCALE = 0.1;
  /**
   * カメラ定義のための定数
   */
  static CAMERA_PARAM = {
    fovy: 50,
    aspect: window.innerWidth / window.innerHeight,
    near: 0.1,
    far: 50.0,
    position: new THREE.Vector3(0.0, 2.0, 10.0),
    lookAt: new THREE.Vector3(0.0, 0.0, 0.0),
  };
  /**
   * レンダラー定義のための定数
   */
  static RENDERER_PARAM = {
    clearColor: 0x000000,
    width: window.innerWidth,
    height: window.innerHeight,
  };
  /**
   * 平行光源定義のための定数
   */
  static DIRECTIONAL_LIGHT_PARAM = {
    color: 0xffffff,
    intensity: 3.0,
    position: new THREE.Vector3(1.0, 1.0, 1.0),
  };
  /**
   * アンビエントライト定義のための定数
   */
  static AMBIENT_LIGHT_PARAM = {
    color: 0xffffff,
    intensity: 0.3,
  };
  /**
   * マテリアル定義のための定数
   */
  static MATERIAL_PARAM = {
    color: 0xffffff,
  };
  /**
   * フォグの定義のための定数
   */
  static FOG_PARAM = {
    color: 0xffffff,
    near: 10.0,
    far: 20.0,
  };

  wrapper;            // canvas の親要素
  renderer;           // レンダラ
  scene;              // シーン
  camera;             // カメラ
  directionalLight;   // 平行光源（ディレクショナルライト）
  ambientLight;       // 環境光（アンビエントライト）
  controls;           // オービットコントロール
  axesHelper;         // 軸ヘルパー
  isDown;             // キーの押下状態用フラグ
  clock;              // 時間管理用
  sphereGeometry;     // ジオメトリ
  moon;               // 月
  moonMaterial;       // 月用マテリアル
  moonTexture;        // 月用テクスチャ
  boxGeometry;
  boxMaterial;
  box;
  boxArray;

  /**
   * コンストラクタ
   * @constructor
   * @param {HTMLElement} wrapper - canvas 要素を append する親要素
   */
  constructor(wrapper) {
    // 初期化時に canvas を append できるようにプロパティに保持
    this.wrapper = wrapper;

    // 再帰呼び出しのための this 固定
    this.render = this.render.bind(this);

    // キーの押下や離す操作を検出できるようにする
    window.addEventListener('keydown', (keyEvent) => {
      switch (keyEvent.key) {
        case ' ':
          this.isDown = true;
          break;
        default:
      }
    }, false);
    window.addEventListener('keyup', (keyEvent) => {
      this.isDown = false;
    }, false);

    // マウスカーソルの動きを検出できるようにする
    window.addEventListener('pointermove', (pointerEvent) => {
      // ポインター（マウスカーソル）のクライアント領域上の座標
      const pointerX = pointerEvent.clientX;
      const pointerY = pointerEvent.clientY;
      // 3D のワールド空間に合わせてスケールを揃える
      const scaleX = pointerX / window.innerWidth * 2.0 - 1.0;
      const scaleY = pointerY / window.innerHeight * 2.0 - 1.0;
      // ベクトルを単位化する
      const vector = new THREE.Vector2(
        scaleX,
        scaleY,
      );
      vector.normalize();
      // スケールを揃えた値を月の座標に割り当てる
      this.kuppa.position.set(
        vector.x * ThreeApp.MOON_DISTANCE,
        0.0,
        vector.y * ThreeApp.MOON_DISTANCE,
      );
    }, false);

    // リサイズイベント
    window.addEventListener('resize', () => {
      this.renderer.setSize(window.innerWidth, window.innerHeight);
      this.camera.aspect = window.innerWidth / window.innerHeight;
      this.camera.updateProjectionMatrix();
    }, false);
  }
  /**
   * 初期化処理
   */
  init() {
    // レンダラー
    const color = new THREE.Color(ThreeApp.RENDERER_PARAM.clearColor);
    this.renderer = new THREE.WebGLRenderer();
    this.renderer.setClearColor(color);
    this.renderer.setSize(ThreeApp.RENDERER_PARAM.width, ThreeApp.RENDERER_PARAM.height);
    this.wrapper.appendChild(this.renderer.domElement);

    // シーン
    this.scene = new THREE.Scene();
    this.scene.fog = new THREE.Fog(
      ThreeApp.FOG_PARAM.color,
      ThreeApp.FOG_PARAM.near,
      ThreeApp.FOG_PARAM.far
    );

    // カメラ
    this.camera = new THREE.PerspectiveCamera(
      ThreeApp.CAMERA_PARAM.fovy,
      ThreeApp.CAMERA_PARAM.aspect,
      ThreeApp.CAMERA_PARAM.near,
      ThreeApp.CAMERA_PARAM.far,
    );
    this.camera.position.copy(ThreeApp.CAMERA_PARAM.position);
    this.camera.lookAt(ThreeApp.CAMERA_PARAM.lookAt);

    // ディレクショナルライト（平行光源）
    this.directionalLight = new THREE.DirectionalLight(
      ThreeApp.DIRECTIONAL_LIGHT_PARAM.color,
      ThreeApp.DIRECTIONAL_LIGHT_PARAM.intensity
    );
    this.directionalLight.position.copy(ThreeApp.DIRECTIONAL_LIGHT_PARAM.position);
    this.scene.add(this.directionalLight);

    // アンビエントライト（環境光）
    this.ambientLight = new THREE.AmbientLight(
      ThreeApp.AMBIENT_LIGHT_PARAM.color,
      ThreeApp.AMBIENT_LIGHT_PARAM.intensity,
    );
    this.scene.add(this.ambientLight);

    //勇者マリオ
    this.mario = new THREE.Group();
    this.scene.add(this.mario);
    const marioCount = 172;
    this.boxGeometry = new THREE.BoxGeometry(.2, .2, .2);
    const marioPosition = [
      {x: 0.0, y: 1.5, z: 0.0},
      {x: 0.2, y: 1.5, z: 0.0},
      {x: .4, y: 1.5, z: 0.0},
      {x: .6, y: 1.5, z: 0.0},
      {x: .8, y: 1.5, z: 0.0},
      {x: 1.4, y: 1.5, z: 0.0},
      {x: 1.6, y: 1.5, z: 0.0},
      {x: 1.8, y: 1.5, z: 0.0},
      {x: 1.4, y: 1.7, z: 0.0},
      {x: 1.6, y: 1.7, z: 0.0},
      {x: 1.8, y: 1.7, z: 0.0},
      {x: -.2, y: 1.3, z: 0.0},//2
      {x: 0.0, y: 1.3, z: 0.0},
      {x: 0.2, y: 1.3, z: 0.0},
      {x: .4, y: 1.3, z: 0.0},
      {x: .6, y: 1.3, z: 0.0},
      {x: .8, y: 1.3, z: 0.0},
      {x: 1, y: 1.3, z: 0.0},
      {x: 1.2, y: 1.3, z: 0.0},
      {x: 1.4, y: 1.3, z: 0.0},
      {x: 1.6, y: 1.3, z: 0.0},
      {x: 1.8, y: 1.3, z: 0.0},
      {x: -.2, y: 1.1, z: 0.0},//3
      {x: 0.0, y: 1.1, z: 0.0},
      {x: 0.2, y: 1.1, z: 0.0},
      {x: .4, y: 1.1, z: 0.0},
      {x: .6, y: 1.1, z: 0.0},
      {x: .8, y: 1.1, z: 0.0},
      {x: 1, y: 1.1, z: 0.0},
      {x: 1.4, y: 1.1, z: 0.0},
      {x: 1.6, y: 1.1, z: 0.0},
      {x: 1.8, y: 1.1, z: 0.0},
      {x: -.4, y: .9, z: 0.0},//4
      {x: -.2, y: .9, z: 0.0},
      {x: 0.0, y: .9, z: 0.0},
      {x: 0.2, y: .9, z: 0.0},
      {x: .4, y: .9, z: 0.0},
      {x: .6, y: .9, z: 0.0},
      {x: .8, y: .9, z: 0.0},
      {x: 1, y: .9, z: 0.0},
      {x: 1.2, y: .9, z: 0.0},
      {x: 1.4, y: .9, z: 0.0},
      {x: 1.6, y: .9, z: 0.0},
      {x: 1.8, y: .9, z: 0.0},
      {x: -.4, y: .7, z: 0.0},//5
      {x: -.2, y: .7, z: 0.0},
      {x: 0.0, y: .7, z: 0.0},
      {x: 0.2, y: .7, z: 0.0},
      {x: .4, y: .7, z: 0.0},
      {x: .6, y: .7, z: 0.0},
      {x: .8, y: .7, z: 0.0},
      {x: 1, y: .7, z: 0.0},
      {x: 1.2, y: .7, z: 0.0},
      {x: 1.4, y: .7, z: 0.0},
      {x: 1.6, y: .7, z: 0.0},
      {x: 1.8, y: .7, z: 0.0},
      {x: -.4, y: .5, z: 0.0},//6
      {x: -.2, y: .5, z: 0.0},
      {x: 0.0, y: .5, z: 0.0},
      {x: 0.2, y: .5, z: 0.0},
      {x: .4, y: .5, z: 0.0},
      {x: .6, y: .5, z: 0.0},
      {x: .8, y: .5, z: 0.0},
      {x: 1, y: .5, z: 0.0},
      {x: 1.2, y: .5, z: 0.0},
      {x: 1.4, y: .5, z: 0.0},
      {x: 1.6, y: .5, z: 0.0},
      {x: 1.8, y: .5, z: 0.0},
      {x: 0.0, y: .3, z: 0.0},//7
      {x: 0.2, y: .3, z: 0.0},
      {x: .4, y: .3, z: 0.0},
      {x: .6, y: .3, z: 0.0},
      {x: .8, y: .3, z: 0.0},
      {x: 1, y: .3, z: 0.0},
      {x: 1.2, y: .3, z: 0.0},
      {x: 1.4, y: .3, z: 0.0},
      {x: -.8, y: .1, z: 0.0},//8
      {x: -.6, y: .1, z: 0.0},
      {x: -.4, y: .1, z: 0.0},
      {x: -.2, y: .1, z: 0.0},
      {x: 0.0, y: .1, z: 0.0},
      {x: 0.2, y: .1, z: 0.0},
      {x: .4, y: .1, z: 0.0},
      {x: .6, y: .1, z: 0.0},
      {x: .8, y: .1, z: 0.0},
      {x: 1, y: .1, z: 0.0},
      {x: 1.2, y: .1, z: 0.0},
      {x: -1.0, y: -.1, z: 0.0},//9
      {x: -.8, y: -.1, z: 0.0},
      {x: -.6, y: -.1, z: 0.0},
      {x: -.4, y: -.1, z: 0.0},
      {x: -.2, y: -.1, z: 0.0},
      {x: 0.0, y: -.1, z: 0.0},
      {x: 0.2, y: -.1, z: 0.0},
      {x: .4, y: -.1, z: 0.0},
      {x: .6, y: -.1, z: 0.0},
      {x: .8, y: -.1, z: 0.0},
      {x: 1, y: -.1, z: 0.0},
      {x: 1.2, y: -.1, z: 0.0},
      {x: 1.8, y: -.1, z: 0.0},
      {x: -1.2, y: -.3, z: 0.0},//10
      {x: -1.0, y: -.3, z: 0.0},
      {x: -.8, y: -.3, z: 0.0},
      {x: -.6, y: -.3, z: 0.0},
      {x: -.4, y: -.3, z: 0.0},
      {x: -.2, y: -.3, z: 0.0},
      {x: 0.0, y: -.3, z: 0.0},
      {x: 0.2, y: -.3, z: 0.0},
      {x: .4, y: -.3, z: 0.0},
      {x: .6, y: -.3, z: 0.0},
      {x: .8, y: -.3, z: 0.0},
      {x: 1, y: -.3, z: 0.0},
      {x: 1.2, y: -.3, z: 0.0},
      {x: 1.8, y: -.3, z: 0.0},
      {x: -1.2, y: -.5, z: 0.0},//11
      {x: -1.0, y: -.5, z: 0.0},
      {x: -.8, y: -.5, z: 0.0},
      {x: -.4, y: -.5, z: 0.0},
      {x: -.2, y: -.5, z: 0.0},
      {x: 0.0, y: -.5, z: 0.0},
      {x: 0.2, y: -.5, z: 0.0},
      {x: .4, y: -.5, z: 0.0},
      {x: .6, y: -.5, z: 0.0},
      {x: .8, y: -.5, z: 0.0},
      {x: 1, y: -.5, z: 0.0},
      {x: 1.2, y: -.5, z: 0.0},
      {x: 1.4, y: -.5, z: 0.0},
      {x: 1.6, y: -.5, z: 0.0},
      {x: 1.8, y: -.5, z: 0.0},
      {x: -1.0, y: -.7, z: 0.0},//12
      {x: -.6, y: -.7, z: 0.0},
      {x: -.4, y: -.7, z: 0.0},
      {x: -.2, y: -.7, z: 0.0},
      {x: 0.0, y: -.7, z: 0.0},
      {x: 0.2, y: -.7, z: 0.0},
      {x: .4, y: -.7, z: 0.0},
      {x: .6, y: -.7, z: 0.0},
      {x: .8, y: -.7, z: 0.0},
      {x: 1, y: -.7, z: 0.0},
      {x: 1.2, y: -.7, z: 0.0},
      {x: 1.4, y: -.7, z: 0.0},
      {x: 1.6, y: -.7, z: 0.0},
      {x: 1.8, y: -.7, z: 0.0},
      {x: -.8, y: -.9, z: 0.0},//13
      {x: -.6, y: -.9, z: 0.0},
      {x: -.4, y: -.9, z: 0.0},
      {x: -.2, y: -.9, z: 0.0},
      {x: 0.0, y: -.9, z: 0.0},
      {x: 0.2, y: -.9, z: 0.0},
      {x: .4, y: -.9, z: 0.0},
      {x: .6, y: -.9, z: 0.0},
      {x: .8, y: -.9, z: 0.0},
      {x: 1, y: -.9, z: 0.0},
      {x: 1.2, y: -.9, z: 0.0},
      {x: 1.4, y: -.9, z: 0.0},
      {x: 1.6, y: -.9, z: 0.0},
      {x: 1.8, y: -.9, z: 0.0},
      {x: -1.0, y: -1.1, z: 0.0},//14
      {x: -.8, y: -1.1, z: 0.0},
      {x: -.6, y: -1.1, z: 0.0},
      {x: -.4, y: -1.1, z: 0.0},
      {x: -.2, y: -1.1, z: 0.0},
      {x: 0.0, y: -1.1, z: 0.0},
      {x: 0.2, y: -1.1, z: 0.0},
      {x: .4, y: -1.1, z: 0.0},
      {x: .6, y: -1.1, z: 0.0},
      {x: .8, y: -1.1, z: 0.0},
      {x: -1.0, y: -1.3, z: 0.0},//15
      {x: -.4, y: -1.3, z: 0.0},
      {x: -.2, y: -1.3, z: 0.0},
      {x: 0.0, y: -1.3, z: 0.0},
      {x: 0.2, y: -1.3, z: 0.0},
    ];
    const marioColors = {
      0: 0xff0000,//赤
      1: 0xff0000,
      2: 0xff0000,
      3: 0xff0000,
      4: 0xff0000,
      5: 0xf8b500,//茶色
      6: 0xf8b500,
      7: 0xf8b500,
      8: 0xf8b500,
      9: 0xf8b500,
      10: 0xf8b500,
      11: 0xff0000,
      12: 0xff0000,
      13: 0xff0000,
      14: 0xff0000,
      15: 0xff0000,
      16: 0xff0000,
      17: 0xff0000,
      18: 0xff0000,
      19: 0xff0000,
      20: 0xf8b500,
      21: 0xf8b500,
      22: 0x666600,//緑
      23: 0x666600,
      24: 0x666600,
      25: 0xf8b500,
      26: 0xf8b500,
      27: 0x666600,
      28: 0xf8b500,
      29: 0x666600,
      30: 0x666600,
      31: 0x666600,
      32: 0x666600,
      33: 0xf8b500,
      34: 0x666600,
      35: 0xf8b500,
      36: 0xf8b500,
      37: 0xf8b500,
      38: 0x666600,
      39: 0xf8b500,
      40: 0xf8b500,
      41: 0x666600,
      42: 0x666600,
      43: 0x666600,
      44: 0x666600,
      45: 0xf8b500,
      46: 0x666600,
      47: 0x666600,
      48: 0xf8b500,
      49: 0xf8b500,
      50: 0xf8b500,
      51: 0x666600,
      52: 0xf8b500,
      53: 0xf8b500,
      54: 0xf8b500,
      55: 0x666600,
      56: 0x666600,
      57: 0x666600,
      58: 0xf8b500,
      59: 0xf8b500,
      60: 0xf8b500,
      61: 0xf8b500,
      62: 0x666600,
      63: 0x666600,
      64: 0x666600,
      65: 0x666600,
      66: 0x666600,
      67: 0x666600,
      68: 0xf8b500,
      69: 0xf8b500,
      70: 0xf8b500,
      71: 0xf8b500,
      72: 0xf8b500,
      73: 0xf8b500,
      74: 0xf8b500,
      75: 0x666600,
      76: 0x666600,
      77: 0x666600,
      78: 0x666600,
      79: 0x666600,
      80: 0x666600,
      81: 0xff0000,
      82: 0x666600,
      83: 0x666600,
      84: 0x666600,
      85: 0xff0000,
      86: 0x666600,
      87: 0x666600,
      88: 0x666600,
      89: 0x666600,
      90: 0x666600,
      91: 0x666600,
      92: 0x666600,
      93: 0x666600,
      94: 0xff0000,
      95: 0x666600,
      96: 0x666600,
      97: 0x666600,
      98: 0xff0000,
      99: 0x666600,
      100: 0xf8b500,
      101: 0xf8b500,
      102: 0xf8b500,
      103: 0x666600,
      104: 0x666600,
      105: 0x666600,
      106: 0x666600,
      107: 0x666600,
      108: 0xff0000,
      109: 0xff0000,
      110: 0xff0000,
      111: 0xff0000,
      112: 0xff0000,
      113: 0x666600,
      114: 0xf8b500,
      115: 0xf8b500,
      116: 0xf8b500,
      117: 0xff0000,
      118: 0xff0000,
      119: 0x666600,
      120: 0xff0000,
      121: 0xff0000,
      122: 0xf8b500,
      123: 0xff0000,
      124: 0xff0000,
      125: 0xf8b500,
      126: 0xff0000,
      127: 0x666600,
      128: 0x666600,
      129: 0xf8b500,
      130: 0x666600,
      131: 0xff0000,
      132: 0xff0000,
      133: 0xff0000,
      134: 0xff0000,
      135: 0xff0000,
      136: 0xff0000,
      137: 0xff0000,
      138: 0xff0000,
      139: 0xff0000,
      140: 0xff0000,
      141: 0x666600,
      142: 0x666600,
      143: 0x666600,
      144: 0x666600,
      145: 0x666600,
      146: 0xff0000,
      147: 0xff0000,
      148: 0xff0000,
      149: 0xff0000,
      150: 0xff0000,
      151: 0xff0000,
      152: 0xff0000,
      153: 0xff0000,
      154: 0xff0000,
      155: 0x666600,
      156: 0x666600,
      157: 0x666600,
      158: 0x666600,
      159: 0x666600,
      160: 0xff0000,
      161: 0xff0000,
      162: 0xff0000,
      163: 0xff0000,
      164: 0xff0000,
      165: 0xff0000,
      166: 0xff0000,
      167: 0x666600,
      168: 0xff0000,
      169: 0xff0000,
      170: 0xff0000,
      171: 0xff0000,
      172: 0xff0000,
    };

    for(let i = 0; i < marioCount; i++) {
      this.boxMaterial = new THREE.MeshPhongMaterial({ color: marioColors[i] });
      const marioBox = new THREE.Mesh(this.boxGeometry, this.boxMaterial);
      marioBox.position.set(marioPosition[i].x, marioPosition[i].y, marioPosition[i].z);
      this.mario.add(marioBox);
    }
    this.mario.scale.setScalar(0.2);
    this.mario.position.set(0.0, 0.0, ThreeApp.MOON_DISTANCE);
    this.marioDirection = new THREE.Vector3(0.0, 0.0, 1.0).normalize();

    //ピーチ姫
    this.peach = new THREE.Group();
    this.scene.add(this.peach);
    const peachCount = 207;
    this.boxGeometry = new THREE.BoxGeometry(.2, .2, .2);
    const peachPosition = [
      {x: 0.0, y: 1.5, z: 0.0},
      {x: .4, y: 1.5, z: 0.0},
      {x: .8, y: 1.5, z: 0.0},
      {x: 1.2, y: 1.5, z: 0.0},
      {x: 1.4, y: 1.5, z: 0.0},
      {x: 1.6, y: 1.5, z: 0.0},
      {x: 1.8, y: 1.5, z: 0.0},
      {x: .0, y: 1.3, z: 0.0},//2
      {x: 0.2, y: 1.3, z: 0.0},
      {x: .4, y: 1.3, z: 0.0},
      {x: .6, y: 1.3, z: 0.0},
      {x: .8, y: 1.3, z: 0.0},
      {x: 1, y: 1.3, z: 0.0},
      {x: 1.2, y: 1.3, z: 0.0},
      {x: 1.4, y: 1.3, z: 0.0},
      {x: 1.6, y: 1.3, z: 0.0},
      {x: 1.8, y: 1.3, z: 0.0},
      {x: 2.0, y: 1.3, z: 0.0},
      {x: 2.2, y: 1.3, z: 0.0},
      {x: 2.4, y: 1.3, z: 0.0},
      {x: -.2, y: 1.1, z: 0.0},//3
      {x: 0.0, y: 1.1, z: 0.0},
      {x: 0.2, y: 1.1, z: 0.0},
      {x: .4, y: 1.1, z: 0.0},
      {x: .6, y: 1.1, z: 0.0},
      {x: .8, y: 1.1, z: 0.0},
      {x: 1, y: 1.1, z: 0.0},
      {x: 1.2, y: 1.1, z: 0.0},
      {x: 1.4, y: 1.1, z: 0.0},
      {x: 1.6, y: 1.1, z: 0.0},
      {x: 1.8, y: 1.1, z: 0.0},
      {x: 2.0, y: 1.1, z: 0.0},
      {x: 2.2, y: 1.1, z: 0.0},
      {x: 2.4, y: 1.1, z: 0.0},
      {x: -.4, y: .9, z: 0.0},//4
      {x: -.2, y: .9, z: 0.0},
      {x: 0.0, y: .9, z: 0.0},
      {x: 0.2, y: .9, z: 0.0},
      {x: .4, y: .9, z: 0.0},
      {x: .6, y: .9, z: 0.0},
      {x: .8, y: .9, z: 0.0},
      {x: 1, y: .9, z: 0.0},
      {x: 1.2, y: .9, z: 0.0},
      {x: 1.4, y: .9, z: 0.0},
      {x: 1.6, y: .9, z: 0.0},
      {x: 1.8, y: .9, z: 0.0},
      {x: 2.0, y: .9, z: 0.0},
      {x: 2.2, y: .9, z: 0.0},
      {x: 2.4, y: .9, z: 0.0},
      {x: -.4, y: .7, z: 0.0},//5
      {x: -.2, y: .7, z: 0.0},
      {x: 0.0, y: .7, z: 0.0},
      {x: 0.2, y: .7, z: 0.0},
      {x: .4, y: .7, z: 0.0},
      {x: .6, y: .7, z: 0.0},
      {x: .8, y: .7, z: 0.0},
      {x: 1, y: .7, z: 0.0},
      {x: 1.2, y: .7, z: 0.0},
      {x: 1.6, y: .7, z: 0.0},
      {x: 1.8, y: .7, z: 0.0},
      {x: 2.0, y: .7, z: 0.0},
      {x: 2.2, y: .7, z: 0.0},
      {x: 2.4, y: .7, z: 0.0},
      {x: 2.6, y: .7, z: 0.0},
      {x: -.8, y: .5, z: 0.0},//6
      {x: -.6, y: .5, z: 0.0},
      {x: -.4, y: .5, z: 0.0},
      {x: -.2, y: .5, z: 0.0},
      {x: 0.0, y: .5, z: 0.0},
      {x: 0.2, y: .5, z: 0.0},
      {x: .4, y: .5, z: 0.0},
      {x: .6, y: .5, z: 0.0},
      {x: .8, y: .5, z: 0.0},
      {x: 1, y: .5, z: 0.0},
      {x: 1.2, y: .5, z: 0.0},
      {x: 1.4, y: .5, z: 0.0},
      {x: 1.6, y: .5, z: 0.0},
      {x: 1.8, y: .5, z: 0.0},
      {x: 2.0, y: .5, z: 0.0},
      {x: 2.2, y: .5, z: 0.0},
      {x: 2.4, y: .5, z: 0.0},
      {x: 2.6, y: .5, z: 0.0},
      {x: -0.6, y: .3, z: 0.0},//7
      {x: -0.4, y: .3, z: 0.0},
      {x: -0.2, y: .3, z: 0.0},
      {x: 0.0, y: .3, z: 0.0},
      {x: 0.2, y: .3, z: 0.0},
      {x: .4, y: .3, z: 0.0},
      {x: .6, y: .3, z: 0.0},
      {x: .8, y: .3, z: 0.0},
      {x: 1, y: .3, z: 0.0},
      {x: 1.2, y: .3, z: 0.0},
      {x: 1.4, y: .3, z: 0.0},
      {x: 2.0, y: .3, z: 0.0},
      {x: 2.2, y: .3, z: 0.0},
      {x: 2.4, y: .3, z: 0.0},
      {x: 2.6, y: .3, z: 0.0},
      {x: -.4, y: .1, z: 0.0},//8
      {x: -.2, y: .1, z: 0.0},
      {x: 0.0, y: .1, z: 0.0},
      {x: 0.2, y: .1, z: 0.0},
      {x: .4, y: .1, z: 0.0},
      {x: .6, y: .1, z: 0.0},
      {x: .8, y: .1, z: 0.0},
      {x: 1, y: .1, z: 0.0},
      {x: 1.2, y: .1, z: 0.0},
      {x: 1.4, y: .1, z: 0.0},
      {x: 2.2, y: .1, z: 0.0},
      {x: 2.4, y: .1, z: 0.0},
      {x: 2.6, y: .1, z: 0.0},
      {x: -.6, y: -.1, z: 0.0},//9
      {x: -.4, y: -.1, z: 0.0},
      {x: -.2, y: -.1, z: 0.0},
      {x: 0.0, y: -.1, z: 0.0},
      {x: 0.2, y: -.1, z: 0.0},
      {x: .4, y: -.1, z: 0.0},
      {x: .6, y: -.1, z: 0.0},
      {x: .8, y: -.1, z: 0.0},
      {x: 1, y: -.1, z: 0.0},
      {x: 1.2, y: -.1, z: 0.0},
      {x: 2.4, y: -.1, z: 0.0},
      {x: -.8, y: -.3, z: 0.0},//10
      {x: -.6, y: -.3, z: 0.0},
      {x: -.4, y: -.3, z: 0.0},
      {x: -.2, y: -.3, z: 0.0},
      {x: 0.0, y: -.3, z: 0.0},
      {x: 0.2, y: -.3, z: 0.0},
      {x: .4, y: -.3, z: 0.0},
      {x: .6, y: -.3, z: 0.0},
      {x: .8, y: -.3, z: 0.0},
      {x: 1, y: -.3, z: 0.0},
      {x: 1.2, y: -.3, z: 0.0},
      {x: 1.4, y: -.3, z: 0.0},
      {x: -.6, y: -.5, z: 0.0},//11
      {x: -.4, y: -.5, z: 0.0},
      {x: -.2, y: -.5, z: 0.0},
      {x: 0.0, y: -.5, z: 0.0},
      {x: 0.2, y: -.5, z: 0.0},
      {x: .4, y: -.5, z: 0.0},
      {x: .6, y: -.5, z: 0.0},
      {x: .8, y: -.5, z: 0.0},
      {x: 1, y: -.5, z: 0.0},
      {x: 1.2, y: -.5, z: 0.0},
      {x: 1.4, y: -.5, z: 0.0},
      {x: -.4, y: -.7, z: 0.0},//12
      {x: -.2, y: -.7, z: 0.0},
      {x: 0.0, y: -.7, z: 0.0},
      {x: 0.2, y: -.7, z: 0.0},
      {x: .4, y: -.7, z: 0.0},
      {x: .6, y: -.7, z: 0.0},
      {x: .8, y: -.7, z: 0.0},
      {x: 1, y: -.7, z: 0.0},
      {x: 1.2, y: -.7, z: 0.0},
      {x: -.4, y: -.9, z: 0.0},//13
      {x: -.2, y: -.9, z: 0.0},
      {x: 0.0, y: -.9, z: 0.0},
      {x: 0.2, y: -.9, z: 0.0},
      {x: .4, y: -.9, z: 0.0},
      {x: .6, y: -.9, z: 0.0},
      {x: .8, y: -.9, z: 0.0},
      {x: 1, y: -.9, z: 0.0},
      //14
      {x: -.2, y: -1.1, z: 0.0},
      {x: 0.0, y: -1.1, z: 0.0},
      {x: 0.2, y: -1.1, z: 0.0},
      {x: .4, y: -1.1, z: 0.0},
      {x: .6, y: -1.1, z: 0.0},
      {x: .8, y: -1.1, z: 0.0},
      {x: 1.0, y: -1.1, z: 0.0},
      {x: 1.2, y: -1.1, z: 0.0},
      //15
      {x: -.2, y: -1.3, z: 0.0},
      {x: 0.0, y: -1.3, z: 0.0},
      {x: 0.2, y: -1.3, z: 0.0},
      {x: 0.4, y: -1.3, z: 0.0},
      {x: .6, y: -1.3, z: 0.0},
      {x: .8, y: -1.3, z: 0.0},
      {x: 1.0, y: -1.3, z: 0.0},
      {x: 1.2, y: -1.3, z: 0.0},
      //16
      {x: -.2, y: -1.5, z: 0.0},
      {x: 0.0, y: -1.5, z: 0.0},
      {x: 0.2, y: -1.5, z: 0.0},
      {x: 0.4, y: -1.5, z: 0.0},
      {x: .6, y: -1.5, z: 0.0},
      {x: .8, y: -1.5, z: 0.0},
      {x: 1.0, y: -1.5, z: 0.0},
      {x: 1.2, y: -1.5, z: 0.0},
      //17
      {x: -.4, y: -1.7, z: 0.0},
      {x: -.2, y: -1.7, z: 0.0},
      {x: 0.0, y: -1.7, z: 0.0},
      {x: 0.2, y: -1.7, z: 0.0},
      {x: 0.4, y: -1.7, z: 0.0},
      {x: .6, y: -1.7, z: 0.0},
      {x: .8, y: -1.7, z: 0.0},
      {x: 1.0, y: -1.7, z: 0.0},
      {x: 1.2, y: -1.7, z: 0.0},
      {x: 1.4, y: -1.7, z: 0.0},
      {x: -.6, y: -1.9, z: 0.0},//18
      {x: -.4, y: -1.9, z: 0.0},
      {x: -.2, y: -1.9, z: 0.0},
      {x: 0.0, y: -1.9, z: 0.0},
      {x: 0.2, y: -1.9, z: 0.0},
      {x: 0.4, y: -1.9, z: 0.0},
      {x: .6, y: -1.9, z: 0.0},
      {x: .8, y: -1.9, z: 0.0},
      {x: 1.0, y: -1.9, z: 0.0},
      {x: 1.2, y: -1.9, z: 0.0},
      {x: 1.4, y: -1.9, z: 0.0},
      {x: 1.6, y: -1.9, z: 0.0},
    ];
    const peachColors = {
      0: 0xe6a535,//金
      1: 0xe6a535,
      2: 0xe6a535,
      3: 0xff61ab,//ピンク
      4: 0xff61ab,
      5: 0xffffff,
      6: 0xffffff,
      7: 0x338bf6,//青
      8: 0xe6a535,
      9: 0xf6337a,//赤ピンク
      10: 0xe6a535,
      11: 0x338bf6,
      12: 0xf6337a,
      13: 0xff61ab,
      14: 0xff61ab,
      15: 0xff61ab,
      16: 0xffffff,
      17: 0xffffff,
      18: 0xffffff,
      19: 0xf6337a,
      20: 0xff61ab,
      21: 0xffdd1e,//髪の毛
      22: 0xffdd1e,
      23: 0xffdd1e,
      24: 0xffdd1e,
      25: 0xffdd1e,
      26: 0xffdd1e,
      27: 0xf6337a,
      28: 0xff61ab,
      29: 0xff61ab,
      30: 0xff61ab,
      31: 0xffffff,
      32: 0xffffff,
      33: 0xffffff,
      34: 0xffdd1e,
      35: 0xffdd1e,
      36: 0xffdd1e,
      37: 0xffdd1e,
      38: 0xffdd1e,
      39: 0xffdd1e,
      40: 0xffdd1e,
      41: 0xffdd1e,
      42: 0xffdd1e,
      43: 0xf6337a,
      44: 0xff61ab,
      45: 0xff61ab,
      46: 0xff61ab,
      47: 0xffffff,
      48: 0xffffff,
      49: 0xffdd1e,
      50: 0xffdd1e,
      51: 0xffdd1e,
      52: 0xffdd1e,
      53: 0xfff1ce,
      54: 0xffdd1e,
      55: 0xffdd1e,
      56: 0xfff1ce,
      57: 0xffdd1e,
      58: 0xf6337a,
      59: 0xff61ab,
      60: 0xff61ab,
      61: 0xff61ab,
      62: 0xffffff,
      63: 0xffffff,
      64: 0xffdd1e,
      65: 0xffdd1e,
      66: 0xffdd1e,
      67: 0xffdd1e,
      68: 0xffdd1e,
      69: 0xffdd1e,
      70: 0x338bf6,
      71: 0xffdd1e,
      72: 0xfff1ce,
      73: 0x338bf6,
      74: 0xffdd1e,
      75: 0xffdd1e,
      76: 0xcdcdcd,
      77: 0xf6337a,
      78: 0xff61ab,
      79: 0xff61ab,
      80: 0xff61ab,
      81: 0xffffff,
      82: 0xffffff,
      83: 0xffdd1e,
      84: 0xffdd1e,
      85: 0xfff1ce,
      86: 0xffdd1e,
      87: 0x71abf3,
      88: 0xfff1ce,
      89: 0xfff1ce,
      90: 0x71abf3,
      91: 0xffdd1e,
      92: 0xcdcdcd,
      93: 0xf6337a,
      94: 0xff61ab,
      95: 0xff61ab,
      96: 0xff61ab,
      97: 0xffdd1e,
      98: 0x338bf6,
      99: 0xfff1ce,
      100: 0xfff1ce,
      101: 0xfff1ce,
      102: 0xfff1ce,
      103: 0xfff1ce,
      104: 0xfff1ce,
      105: 0xcdcdcd,
      106: 0xffdd1e,
      107: 0xf6337a,
      108: 0xff61ab,
      109: 0xff61ab,
      110: 0xffdd1e,
      111: 0xffdd1e,
      112: 0xffdd1e,
      113: 0xffdd1e,
      114: 0xfff1ce,
      115: 0xfff1ce,
      116: 0xff61ab,
      117: 0xfff1ce,
      118: 0xcdcdcd,
      119: 0xffdd1e,
      120: 0xf6337a,
      121: 0xffdd1e,
      122: 0xffdd1e,
      123: 0xffdd1e,
      124: 0xffdd1e,
      125: 0xff61ab,
      126: 0xf6337a,
      127: 0xffdd1e,
      128: 0x338bf6,
      129: 0xf6337a,
      130: 0xffffff,
      131: 0xffffff,
      132: 0xffffff,
      133: 0xffdd1e,
      134: 0xffdd1e,
      135: 0xff61ab,
      136: 0xff61ab,
      137: 0xff61ab,
      138: 0xff61ab,
      139: 0xff61ab,
      140: 0xffffff,
      141: 0xffffff,
      142: 0xffffff,
      143: 0xffffff,
      144: 0xffdd1e,
      145: 0xffdd1e,
      146: 0xff61ab,
      147: 0xfff1ce,
      148: 0xff61ab,
      149: 0xfff1ce,
      150: 0xffffff,
      151: 0xffffff,
      152: 0xfff1ce,
      153: 0xffdd1e,
      154: 0xffdd1e,
      155: 0xf6337a,
      156: 0xf6337a,
      157: 0xfff1ce,
      158: 0xfff1ce,
      159: 0xf6337a,
      160: 0xf6337a,
      161: 0xf6337a,
      162: 0xf6337a,
      163: 0xf6337a,
      164: 0xff61ab,
      165: 0xff61ab,
      166: 0xf6337a,
      167: 0xf6337a,
      168: 0xf6337a,
      169: 0xf6337a,
      170: 0xf6337a,
      171: 0xff61ab,
      172: 0xff61ab,
      173: 0xff61ab,
      174: 0xff61ab,
      175: 0xf6337a,
      176: 0xf6337a,
      177: 0xff61ab,
      178: 0xff61ab,
      179: 0xff61ab,
      180: 0xff61ab,
      181: 0xff61ab,
      182: 0xff61ab,
      183: 0xff61ab,
      184: 0xff61ab,
      185: 0xff61ab,
      186: 0xff61ab,
      187: 0xff61ab,
      188: 0xff61ab,
      189: 0xff61ab,
      190: 0xff61ab,
      191: 0xff61ab,
      192: 0xff61ab,
      193: 0xff61ab,
      194: 0xff61ab,
      195: 0xff61ab,
      196: 0xff61ab,
      197: 0xff61ab,
      198: 0xff61ab,
      199: 0xf6337a,
      200: 0xf6337a,
      201: 0xf6337a,
      202: 0xf6337a,
      203: 0xf6337a,
      204: 0xf6337a,
      205: 0xf6337a,
      206: 0xf6337a,
      207: 0xf6337a,
      208: 0xf6337a,
      209: 0xf6337a,
      210: 0xf6337a,
      211: 0xf6337a,
      212: 0xf6337a,
    };
    for(let i = 0; i < peachCount; i++) {
      this.boxMaterial = new THREE.MeshPhongMaterial({ color: peachColors[i] });
      const peachbox = new THREE.Mesh(this.boxGeometry, this.boxMaterial);
      peachbox.position.set(peachPosition[i].x, peachPosition[i].y, peachPosition[i].z);
      this.peach.add(peachbox);
    }
    this.peach.scale.setScalar(0.2);

    //クッパ
    this.kuppa = new THREE.Group();
    this.scene.add(this.kuppa);
    const kuppaCount = 558;//562
    this.boxGeometry = new THREE.BoxGeometry(.2, .2, .2);
    const kuppaPosition = [
      {x: 0.0, y: 1.8, z: 0.0},
      {x: .2, y: 1.8, z: 0.0},
      {x: .4, y: 1.8, z: 0.0},
      {x: -.8, y: 1.6, z: 0.0},//2
      {x: -.6, y: 1.6, z: 0.0},
      {x: -.4, y: 1.6, z: 0.0},
      {x: -.2, y: 1.6, z: 0.0},
      {x: 0, y: 1.6, z: 0.0},
      {x: .2, y: 1.6, z: 0.0},
      {x: -1.0, y: 1.4, z: 0.0},//3
      {x: -.8, y: 1.4, z: 0.0},
      {x: -.6, y: 1.4, z: 0.0},
      {x: -.4, y: 1.4, z: 0.0},
      {x: -.2, y: 1.4, z: 0.0},
      {x: -.0, y: 1.4, z: 0.0},
      {x: .2, y:  1.4, z: 0.0},
      {x: -1.4, y: 1.2, z: 0.0},//4
      {x: -1.2, y: 1.2, z: 0.0},
      {x: -1.0, y: 1.2, z: 0.0},
      {x: -.8, y: 1.2, z: 0.0},
      {x: -.6, y: 1.2, z: 0.0},
      {x: -.4, y: 1.2, z: 0.0},
      {x: -.2, y: 1.2, z: 0.0},
      {x: .0, y: 1.2, z: 0.0},
      {x: .2, y: 1.2, z: 0.0},
      {x: -2.2, y: 1.0, z: 0.0},//5
      {x: -1.6, y: 1.0, z: 0.0},
      {x: -1.4, y: 1.0, z: 0.0},
      {x: -1.2, y: 1.0, z: 0.0},
      {x: -1.0, y: 1.0, z: 0.0},
      {x: -.8, y: 1.0, z: 0.0},
      {x: -.6, y: 1.0, z: 0.0},
      {x: -.4, y: 1.0, z: 0.0},
      {x: -.2, y: 1.0, z: 0.0},
      {x: .0, y: 1.0, z: 0.0},
      {x: .2, y: 1.0, z: 0.0},
      {x: -2.4, y: .8, z: 0.0},//6
      {x: -2, y: .8, z: 0.0},
      {x: -1.8, y: .8, z: 0.0},
      {x: -1.6, y: .8, z: 0.0},
      {x: -1.4, y: .8, z: 0.0},
      {x: -1.2, y: .8, z: 0.0},
      {x: -1.0, y: .8, z: 0.0},
      {x: -.8, y: .8, z: 0.0},
      {x: -.6, y: .8, z: 0.0},
      {x: -.4, y: .8, z: 0.0},
      {x: -.2, y: .8, z: 0.0},
      {x: .0, y: .8, z: 0.0},
      {x: .2, y: .8, z: 0.0},
      {x: .4, y: .8, z: 0.0},
      {x: -2.4, y: .6, z: 0.0},//7
      {x: -2.2, y: .6, z: 0.0},
      {x: -2, y: .6, z: 0.0},
      {x: -1.8, y: .6, z: 0.0},
      {x: -1.6, y: .6, z: 0.0},
      {x: -1.4, y: .6, z: 0.0},
      {x: -1.2, y: .6, z: 0.0},
      {x: -1.0, y: .6, z: 0.0},
      {x: -.8, y: .6, z: 0.0},
      {x: -.6, y: .6, z: 0.0},
      {x: -.4, y: .6, z: 0.0},
      {x: -.2, y: .6, z: 0.0},
      {x: .0, y: .6, z: 0.0},
      {x: .2, y: .6, z: 0.0},
      {x: .4, y: .6, z: 0.0},
      {x: -2.4, y: .4, z: 0.0},//8
      {x: -2.2, y: .4, z: 0.0},
      {x: -2, y: .4, z: 0.0},
      {x: -1.8, y: .4, z: 0.0},
      {x: -1.6, y: .4, z: 0.0},
      {x: -1.4, y: .4, z: 0.0},
      {x: -1.2, y: .4, z: 0.0},
      {x: -1.0, y: .4, z: 0.0},
      {x: -.8, y: .4, z: 0.0},
      {x: -.6, y: .4, z: 0.0},
      {x: -.4, y: .4, z: 0.0},
      {x: -.2, y: .4, z: 0.0},
      {x: .0, y: .4, z: 0.0},
      {x: .2, y: .4, z: 0.0},
      {x: .4, y: .4, z: 0.0},
      {x: -2.4, y: .2, z: 0.0},//9
      {x: -2.2, y: .2, z: 0.0},
      {x: -2, y: .2, z: 0.0},
      {x: -1.8, y: .2, z: 0.0},
      {x: -1.6, y: .2, z: 0.0},
      {x: -1.4, y: .2, z: 0.0},
      {x: -1.2, y: .2, z: 0.0},
      {x: -1.0, y: .2, z: 0.0},
      {x: -.8, y: .2, z: 0.0},
      {x: -.6, y: .2, z: 0.0},
      {x: -.4, y: .2, z: 0.0},
      {x: -.2, y: .2, z: 0.0},
      {x: .0, y: .2, z: 0.0},
      {x: .2, y: .2, z: 0.0},
      {x: .4, y: .2, z: 0.0},
      {x: .6, y: .2, z: 0.0},
      {x: .8, y: .2, z: 0.0},
      {x: 1.0, y: .2, z: 0.0},
      {x: 1.2, y: .2, z: 0.0},
      {x: 1.4, y: .2, z: 0.0},
      {x: 1.6, y: .2, z: 0.0},
      {x: -2.2, y: .0, z: 0.0},//10
      {x: -1.8, y: .0, z: 0.0},
      {x: -1.6, y: .0, z: 0.0},
      {x: -1.4, y: .0, z: 0.0},
      {x: -1.2, y: .0, z: 0.0},
      {x: -1.0, y: .0, z: 0.0},
      {x: -.8, y: .0, z: 0.0},
      {x: -.6, y: .0, z: 0.0},
      {x: -.4, y: .0, z: 0.0},
      {x: -.2, y: .0, z: 0.0},
      {x: .0, y: .0, z: 0.0},
      {x: .2, y: .0, z: 0.0},
      {x: .4, y: .0, z: 0.0},
      {x: .6, y: .0, z: 0.0},
      {x: .8, y: .0, z: 0.0},
      {x: 1.0, y: .0, z: 0.0},
      {x: 1.2, y: .0, z: 0.0},
      {x: 1.4, y: .0, z: 0.0},
      {x: 1.6, y: .0, z: 0.0},
      {x: 1.8, y: .0, z: 0.0},
      {x: 2.0, y: .0, z: 0.0},
      {x: -2.2, y: -.2, z: 0.0},//
      {x: -1.8, y: -.2, z: 0.0},
      {x: -1.4, y: -.2, z: 0.0},
      {x: -1.0, y: -.2, z: 0.0},
      {x: -.8, y: -.2, z: 0.0},
      {x: -.6, y: -.2, z: 0.0},
      {x: -.4, y: -.2, z: 0.0},
      {x: -.2, y: -.2, z: 0.0},
      {x: .0, y: -.2, z: 0.0},
      {x: .2, y: -.2, z: 0.0},
      {x: .4, y: -.2, z: 0.0},
      {x: .6, y: -.2, z: 0.0},
      {x: .8, y: -.2, z: 0.0},
      {x: 1.0, y: -.2, z: 0.0},
      {x: 1.2, y: -.2, z: 0.0},
      {x: 1.4, y: -.2, z: 0.0},
      {x: 1.6, y: -.2, z: 0.0},
      {x: 1.8, y: -.2, z: 0.0},
      {x: 2.0, y: -.2, z: 0.0},
      {x: 2.2, y: -.2, z: 0.0},
      {x: 2.4, y: -.2, z: 0.0},
      {x: 2.6, y: -.2, z: 0.0},
      {x: 2.8, y: -.2, z: 0.0},
      {x: -2.2, y: -.4, z: 0.0},//
      {x: -2, y: -.4, z: 0.0},
      {x: -1.8, y: -.4, z: 0.0},
      {x: -1.6, y: -.4, z: 0.0},
      {x: -1.4, y: -.4, z: 0.0},
      {x: -1.2, y: -.4, z: 0.0},
      {x: -1.0, y: -.4, z: 0.0},
      {x: -.8, y: -.4, z: 0.0},
      {x: -.6, y: -.4, z: 0.0},
      {x: -.4, y: -.4, z: 0.0},
      {x: -.2, y: -.4, z: 0.0},
      {x: .0, y: -.4, z: 0.0},
      {x: .2, y: -.4, z: 0.0},
      {x: .4, y: -.4, z: 0.0},
      {x: .6, y: -.4, z: 0.0},
      {x: .8, y: -.4, z: 0.0},
      {x: 1.0, y: -.4, z: 0.0},
      {x: 1.2, y: -.4, z: 0.0},
      {x: 1.4, y: -.4, z: 0.0},
      {x: 1.6, y: -.4, z: 0.0},
      {x: 1.8, y: -.4, z: 0.0},
      {x: 2.0, y: -.4, z: 0.0},
      {x: 2.2, y: -.4, z: 0.0},
      {x: 2.4, y: -.4, z: 0.0},
      {x: 2.6, y: -.4, z: 0.0},
      {x: 2.8, y: -.4, z: 0.0},
      {x: -2, y: -.6, z: 0.0},//
      {x: -1.8, y: -.6, z: 0.0},
      {x: -1.6, y: -.6, z: 0.0},
      {x: -1.4, y: -.6, z: 0.0},
      {x: -1.2, y: -.6, z: 0.0},
      {x: -1.0, y: -.6, z: 0.0},
      {x: -.8, y: -.6, z: 0.0},
      {x: -.6, y: -.6, z: 0.0},
      {x: -.4, y: -.6, z: 0.0},
      {x: -.2, y: -.6, z: 0.0},
      {x: .0, y: -.6, z: 0.0},
      {x: .2, y: -.6, z: 0.0},
      {x: .4, y: -.6, z: 0.0},
      {x: .6, y: -.6, z: 0.0},
      {x: .8, y: -.6, z: 0.0},
      {x: 1.0, y: -.6, z: 0.0},
      {x: 1.2, y: -.6, z: 0.0},
      {x: 1.4, y: -.6, z: 0.0},
      {x: 1.6, y: -.6, z: 0.0},
      {x: 1.8, y: -.6, z: 0.0},
      {x: 2.0, y: -.6, z: 0.0},
      {x: 2.2, y: -.6, z: 0.0},
      {x: 2.4, y: -.6, z: 0.0},
      {x: 2.6, y: -.6, z: 0.0},
      {x: 2.8, y: -.6, z: 0.0},
      {x: 3.0, y: -.6, z: 0.0},
      {x: 3.2, y: -.6, z: 0.0},
      {x: -1.6, y: -.8, z: 0.0},//
      {x: -1.4, y: -.8, z: 0.0},
      {x: -1.2, y: -.8, z: 0.0},
      {x: -1.0, y: -.8, z: 0.0},
      {x: -.8, y: -.8, z: 0.0},
      {x: -.6, y: -.8, z: 0.0},
      {x: -.4, y: -.8, z: 0.0},
      {x: -.2, y: -.8, z: 0.0},
      {x: .0, y: -.8, z: 0.0},
      {x: .2, y: -.8, z: 0.0},
      {x: .4, y: -.8, z: 0.0},
      {x: .6, y: -.8, z: 0.0},
      {x: .8, y: -.8, z: 0.0},
      {x: 1.0, y: -.8, z: 0.0},
      {x: 1.2, y: -.8, z: 0.0},
      {x: 1.4, y: -.8, z: 0.0},
      {x: 1.6, y: -.8, z: 0.0},
      {x: 1.8, y: -.8, z: 0.0},
      {x: 2.0, y: -.8, z: 0.0},
      {x: 2.2, y: -.8, z: 0.0},
      {x: 2.4, y: -.8, z: 0.0},
      {x: 2.6, y: -.8, z: 0.0},
      {x: 2.8, y: -.8, z: 0.0},
      {x: 3.0, y: -.8, z: 0.0},
      {x: 3.2, y: -.8, z: 0.0},
      {x: -1.0, y: -1.0, z: 0.0},//
      {x: -.8, y: -1.0, z: 0.0},
      {x: -.6, y: -1.0, z: 0.0},
      {x: -.4, y: -1.0, z: 0.0},
      {x: -.2, y: -1.0, z: 0.0},
      {x: .0, y: -1.0, z: 0.0},
      {x: .2, y: -1.0, z: 0.0},
      {x: .4, y: -1.0, z: 0.0},
      {x: .6, y: -1.0, z: 0.0},
      {x: .8, y: -1.0, z: 0.0},
      {x: 1.0, y: -1.0, z: 0.0},
      {x: 1.2, y: -1.0, z: 0.0},
      {x: 1.4, y: -1.0, z: 0.0},
      {x: 1.6, y: -1.0, z: 0.0},
      {x: 1.8, y: -1.0, z: 0.0},
      {x: 2.0, y: -1.0, z: 0.0},
      {x: 2.2, y: -1.0, z: 0.0},
      {x: 2.4, y: -1.0, z: 0.0},
      {x: 2.6, y: -1.0, z: 0.0},
      {x: 2.8, y: -1.0, z: 0.0},
      {x: 3.0, y: -1.0, z: 0.0},
      {x: 3.2, y: -1.0, z: 0.0},
      {x: -.2, y: -1.2, z: 0.0},//
      {x: .0, y: -1.2, z: 0.0},
      {x: .2, y: -1.2, z: 0.0},
      {x: .4, y: -1.2, z: 0.0},
      {x: .6, y: -1.2, z: 0.0},
      {x: .8, y: -1.2, z: 0.0},
      {x: 1.0, y: -1.2, z: 0.0},
      {x: 1.2, y: -1.2, z: 0.0},
      {x: 1.4, y: -1.2, z: 0.0},
      {x: 1.6, y: -1.2, z: 0.0},
      {x: 1.8, y: -1.2, z: 0.0},
      {x: 2.0, y: -1.2, z: 0.0},
      {x: 2.2, y: -1.2, z: 0.0},
      {x: 2.4, y: -1.2, z: 0.0},
      {x: 2.6, y: -1.2, z: 0.0},
      {x: 2.8, y: -1.2, z: 0.0},
      {x: 3.0, y: -1.2, z: 0.0},
      {x: 3.2, y: -1.2, z: 0.0},
      {x: 3.4, y: -1.2, z: 0.0},
      {x: .0, y: -1.4, z: 0.0},//
      {x: .2, y: -1.4, z: 0.0},
      {x: .4, y: -1.4, z: 0.0},
      {x: .6, y: -1.4, z: 0.0},
      {x: .8, y: -1.4, z: 0.0},
      {x: 1.0, y: -1.4, z: 0.0},
      {x: 1.2, y: -1.4, z: 0.0},
      {x: 1.4, y: -1.4, z: 0.0},
      {x: 1.6, y: -1.4, z: 0.0},
      {x: 1.8, y: -1.4, z: 0.0},
      {x: 2.0, y: -1.4, z: 0.0},
      {x: 2.2, y: -1.4, z: 0.0},
      {x: 2.4, y: -1.4, z: 0.0},
      {x: 2.6, y: -1.4, z: 0.0},
      {x: 2.8, y: -1.4, z: 0.0},
      {x: 3.0, y: -1.4, z: 0.0},
      {x: 3.2, y: -1.4, z: 0.0},
      {x: 3.4, y: -1.4, z: 0.0},
      {x: 3.4, y: -1.4, z: 0.0},
      {x: .2, y: -1.6, z: 0.0},//
      {x: .4, y: -1.6, z: 0.0},
      {x: .6, y: -1.6, z: 0.0},
      {x: .8, y: -1.6, z: 0.0},
      {x: 1.0, y: -1.6, z: 0.0},
      {x: 1.2, y: -1.6, z: 0.0},
      {x: 1.4, y: -1.6, z: 0.0},
      {x: 1.6, y: -1.6, z: 0.0},
      {x: 1.8, y: -1.6, z: 0.0},
      {x: 2.0, y: -1.6, z: 0.0},
      {x: 2.2, y: -1.6, z: 0.0},
      {x: 2.4, y: -1.6, z: 0.0},
      {x: 2.6, y: -1.6, z: 0.0},
      {x: 2.8, y: -1.6, z: 0.0},
      {x: 3.0, y: -1.6, z: 0.0},
      {x: 3.2, y: -1.6, z: 0.0},
      {x: 3.4, y: -1.6, z: 0.0},
      {x: -.6, y: -1.8, z: 0.0},//
      {x: -.4, y: -1.8, z: 0.0},
      {x: -.2, y: -1.8, z: 0.0},
      {x: .4, y: -1.8, z: 0.0},
      {x: .8, y: -1.8, z: 0.0},
      {x: 1.0, y: -1.8, z: 0.0},
      {x: 1.2, y: -1.8, z: 0.0},
      {x: 1.4, y: -1.8, z: 0.0},
      {x: 1.6, y: -1.8, z: 0.0},
      {x: 1.8, y: -1.8, z: 0.0},
      {x: 2.0, y: -1.8, z: 0.0},
      {x: 2.2, y: -1.8, z: 0.0},
      {x: 2.4, y: -1.8, z: 0.0},
      {x: 2.6, y: -1.8, z: 0.0},
      {x: 2.8, y: -1.8, z: 0.0},
      {x: 3.0, y: -1.8, z: 0.0},
      {x: 3.2, y: -1.8, z: 0.0},
      {x: 3.4, y: -1.8, z: 0.0},
      {x: 3.6, y: -1.8, z: 0.0},
      {x: -.8, y: -2.0, z: 0.0},//
      {x: -.6, y: -2.0, z: 0.0},
      {x: -.4, y: -2.0, z: 0.0},
      {x: .0, y: -2.0, z: 0.0},
      {x: .2, y: -2.0, z: 0.0},
      {x: .4, y: -2.0, z: 0.0},
      {x: .8, y: -2.0, z: 0.0},
      {x: 1.0, y: -2.0, z: 0.0},
      {x: 1.2, y: -2.0, z: 0.0},
      {x: 1.4, y: -2.0, z: 0.0},
      {x: 1.6, y: -2.0, z: 0.0},
      {x: 1.8, y: -2.0, z: 0.0},
      {x: 2.0, y: -2.0, z: 0.0},
      {x: 2.2, y: -2.0, z: 0.0},
      {x: 2.4, y: -2.0, z: 0.0},
      {x: 2.6, y: -2.0, z: 0.0},
      {x: 2.8, y: -2.0, z: 0.0},
      {x: 3.0, y: -2.0, z: 0.0},
      {x: 3.2, y: -2.0, z: 0.0},
      {x: 3.4, y: -2.0, z: 0.0},
      {x: 3.6, y: -2.0, z: 0.0},
      {x: 3.8, y: -2.0, z: 0.0},
      {x: -.8, y: -2.2, z: 0.0},//
      {x: -.6, y: -2.2, z: 0.0},
      {x: .0, y: -2.2, z: 0.0},
      {x: .2, y: -2.2, z: 0.0},
      {x: .4, y: -2.2, z: 0.0},
      {x: .6, y: -2.2, z: 0.0},
      {x: 1.2, y: -2.2, z: 0.0},
      {x: 1.4, y: -2.2, z: 0.0},
      {x: 1.6, y: -2.2, z: 0.0},
      {x: 1.8, y: -2.2, z: 0.0},
      {x: 2.0, y: -2.2, z: 0.0},
      {x: 2.2, y: -2.2, z: 0.0},
      {x: 2.4, y: -2.2, z: 0.0},
      {x: 2.6, y: -2.2, z: 0.0},
      {x: 2.8, y: -2.2, z: 0.0},
      {x: 3.0, y: -2.2, z: 0.0},
      {x: 3.2, y: -2.2, z: 0.0},
      {x: 3.4, y: -2.2, z: 0.0},
      {x: -.8, y: -2.4, z: 0.0},//
      {x: -.6, y: -2.4, z: 0.0},
      {x: -.2, y: -2.4, z: 0.0},
      {x: .0, y: -2.4, z: 0.0},
      {x: .2, y: -2.4, z: 0.0},
      {x: .4, y: -2.4, z: 0.0},
      {x: .6, y: -2.4, z: 0.0},
      {x: .8, y: -2.4, z: 0.0},
      {x: 1.0, y: -2.4, z: 0.0},
      {x: 1.2, y: -2.4, z: 0.0},
      {x: 1.4, y: -2.4, z: 0.0},
      {x: 1.6, y: -2.4, z: 0.0},
      {x: 1.8, y: -2.4, z: 0.0},
      {x: 2.0, y: -2.4, z: 0.0},
      {x: 2.2, y: -2.4, z: 0.0},
      {x: 2.4, y: -2.4, z: 0.0},
      {x: 2.6, y: -2.4, z: 0.0},
      {x: 2.8, y: -2.4, z: 0.0},
      {x: 3.0, y: -2.4, z: 0.0},
      {x: 3.2, y: -2.4, z: 0.0},
      {x: 3.4, y: -2.4, z: 0.0},
      {x: 3.6, y: -2.4, z: 0.0},
      {x: -.8, y: -2.6, z: 0.0},//
      {x: -.2, y: -2.6, z: 0.0},
      {x: .0, y: -2.6, z: 0.0},
      {x: .2, y: -2.6, z: 0.0},
      {x: .4, y: -2.6, z: 0.0},
      {x: .6, y: -2.6, z: 0.0},
      {x: .8, y: -2.6, z: 0.0},
      {x: 1.0, y: -2.6, z: 0.0},
      {x: 1.2, y: -2.6, z: 0.0},
      {x: 1.4, y: -2.6, z: 0.0},
      {x: 1.6, y: -2.6, z: 0.0},
      {x: 1.8, y: -2.6, z: 0.0},
      {x: 2.0, y: -2.6, z: 0.0},
      {x: 2.2, y: -2.6, z: 0.0},
      {x: 2.4, y: -2.6, z: 0.0},
      {x: 2.6, y: -2.6, z: 0.0},
      {x: 2.8, y: -2.6, z: 0.0},
      {x: 3.0, y: -2.6, z: 0.0},
      {x: 3.2, y: -2.6, z: 0.0},
      {x: 3.4, y: -2.6, z: 0.0},
      {x: 3.6, y: -2.6, z: 0.0},
      {x: 3.8, y: -2.6, z: 0.0},
      {x: -.6, y: -2.8, z: 0.0},//
      {x: -.2, y: -2.8, z: 0.0},
      {x: .0, y: -2.8, z: 0.0},
      {x: .2, y: -2.8, z: 0.0},
      {x: .4, y: -2.8, z: 0.0},
      {x: .6, y: -2.8, z: 0.0},
      {x: .8, y: -2.8, z: 0.0},
      {x: 1.0, y: -2.8, z: 0.0},
      {x: 1.2, y: -2.8, z: 0.0},
      {x: 1.4, y: -2.8, z: 0.0},
      {x: 1.6, y: -2.8, z: 0.0},
      {x: 1.8, y: -2.8, z: 0.0},
      {x: 2.0, y: -2.8, z: 0.0},
      {x: 2.2, y: -2.8, z: 0.0},
      {x: 2.4, y: -2.8, z: 0.0},
      {x: 2.6, y: -2.8, z: 0.0},
      {x: 2.8, y: -2.8, z: 0.0},
      {x: 3.0, y: -2.8, z: 0.0},
      {x: 3.2, y: -2.8, z: 0.0},
      {x: 3.4, y: -2.8, z: 0.0},
      {x: 3.6, y: -2.8, z: 0.0},
      {x: -.4, y: -3.0, z: 0.0},//
      {x: -.2, y: -3.0, z: 0.0},
      {x: .0, y: -3.0, z: 0.0},
      {x: .2, y: -3.0, z: 0.0},
      {x: .4, y: -3.0, z: 0.0},
      {x: .8, y: -3.0, z: 0.0},
      {x: 1.0, y: -3.0, z: 0.0},
      {x: 1.2, y: -3.0, z: 0.0},
      {x: 1.4, y: -3.0, z: 0.0},
      {x: 1.6, y: -3.0, z: 0.0},
      {x: 1.8, y: -3.0, z: 0.0},
      {x: 2.0, y: -3.0, z: 0.0},
      {x: 2.2, y: -3.0, z: 0.0},
      {x: 2.4, y: -3.0, z: 0.0},
      {x: 2.6, y: -3.0, z: 0.0},
      {x: 2.8, y: -3.0, z: 0.0},
      {x: 3.0, y: -3.0, z: 0.0},
      {x: 3.2, y: -3.0, z: 0.0},
      {x: 3.4, y: -3.0, z: 0.0},
      {x: 3.6, y: -3.0, z: 0.0},
      {x: .8, y: -3.2, z: 0.0},//
      {x: 1.0, y: -3.2, z: 0.0},
      {x: 1.2, y: -3.2, z: 0.0},
      {x: 1.4, y: -3.2, z: 0.0},
      {x: 1.6, y: -3.2, z: 0.0},
      {x: 1.8, y: -3.2, z: 0.0},
      {x: 2.0, y: -3.2, z: 0.0},
      {x: 2.2, y: -3.2, z: 0.0},
      {x: 2.4, y: -3.2, z: 0.0},
      {x: 2.6, y: -3.2, z: 0.0},
      {x: 2.8, y: -3.2, z: 0.0},
      {x: 3.0, y: -3.2, z: 0.0},
      {x: 3.2, y: -3.2, z: 0.0},
      {x: 3.4, y: -3.2, z: 0.0},
      {x: 3.6, y: -3.2, z: 0.0},
      {x: .8, y: -3.4, z: 0.0},//
      {x: 1.0, y: -3.4, z: 0.0},
      {x: 1.2, y: -3.4, z: 0.0},
      {x: 1.4, y: -3.4, z: 0.0},
      {x: 1.6, y: -3.4, z: 0.0},
      {x: 1.8, y: -3.4, z: 0.0},
      {x: 2.0, y: -3.4, z: 0.0},
      {x: 2.2, y: -3.4, z: 0.0},
      {x: 2.4, y: -3.4, z: 0.0},
      {x: 2.6, y: -3.4, z: 0.0},
      {x: 2.8, y: -3.4, z: 0.0},
      {x: 3.0, y: -3.4, z: 0.0},
      {x: 3.2, y: -3.4, z: 0.0},
      {x: 3.4, y: -3.4, z: 0.0},
      {x: 3.6, y: -3.4, z: 0.0},
      {x: 1.0, y: -3.6, z: 0.0},//
      {x: 1.2, y: -3.6, z: 0.0},
      {x: 1.4, y: -3.6, z: 0.0},
      {x: 1.6, y: -3.6, z: 0.0},
      {x: 1.8, y: -3.6, z: 0.0},
      {x: 2.0, y: -3.6, z: 0.0},
      {x: 2.2, y: -3.6, z: 0.0},
      {x: 2.4, y: -3.6, z: 0.0},
      {x: 2.6, y: -3.6, z: 0.0},
      {x: 2.8, y: -3.6, z: 0.0},
      {x: 3.0, y: -3.6, z: 0.0},
      {x: 3.2, y: -3.6, z: 0.0},
      {x: 3.4, y: -3.6, z: 0.0},
      {x: 3.6, y: -3.6, z: 0.0},
      {x: 3.8, y: -3.6, z: 0.0},
      {x: 1.0, y: -3.8, z: 0.0},//
      {x: 1.2, y: -3.8, z: 0.0},
      {x: 1.4, y: -3.8, z: 0.0},
      {x: 1.6, y: -3.8, z: 0.0},
      {x: 1.8, y: -3.8, z: 0.0},
      {x: 2.0, y: -3.8, z: 0.0},
      {x: 2.2, y: -3.8, z: 0.0},
      {x: 2.4, y: -3.8, z: 0.0},
      {x: 2.6, y: -3.8, z: 0.0},
      {x: 2.8, y: -3.8, z: 0.0},
      {x: 3.0, y: -3.8, z: 0.0},
      {x: 3.2, y: -3.8, z: 0.0},
      {x: 3.4, y: -3.8, z: 0.0},
      {x: 3.6, y: -3.8, z: 0.0},
      {x: 3.8, y: -3.8, z: 0.0},
      {x: .8, y: -4.0, z: 0.0},//
      {x: 1.0, y: -4.0, z: 0.0},
      {x: 1.2, y: -4.0, z: 0.0},
      {x: 1.4, y: -4.0, z: 0.0},
      {x: 1.6, y: -4.0, z: 0.0},
      {x: 1.8, y: -4.0, z: 0.0},
      {x: 2.0, y: -4.0, z: 0.0},
      {x: 2.2, y: -4.0, z: 0.0},
      {x: 2.4, y: -4.0, z: 0.0},
      {x: 2.6, y: -4.0, z: 0.0},
      {x: 2.8, y: -4.0, z: 0.0},
      {x: 3.0, y: -4.0, z: 0.0},
      {x: 3.2, y: -4.0, z: 0.0},
      {x: 3.4, y: -4.0, z: 0.0},
      {x: 3.6, y: -4.0, z: 0.0},
      {x: .6, y: -4.2, z: 0.0},//
      {x: .8, y: -4.2, z: 0.0},
      {x: 1.0, y: -4.2, z: 0.0},
      {x: 1.2, y: -4.2, z: 0.0},
      {x: 1.4, y: -4.2, z: 0.0},
      {x: 1.6, y: -4.2, z: 0.0},
      {x: 1.8, y: -4.2, z: 0.0},
      {x: 2.0, y: -4.2, z: 0.0},
      {x: 2.2, y: -4.2, z: 0.0},
      {x: 2.4, y: -4.2, z: 0.0},
      {x: 2.6, y: -4.2, z: 0.0},
      {x: 2.8, y: -4.2, z: 0.0},
      {x: 3.0, y: -4.2, z: 0.0},
      {x: 3.2, y: -4.2, z: 0.0},
      {x: 3.4, y: -4.2, z: 0.0},
      {x: 1.4, y: -4.4, z: 0.0},//
      {x: 1.6, y: -4.4, z: 0.0},
      {x: 1.8, y: -4.4, z: 0.0},
      {x: 2.0, y: -4.4, z: 0.0},
      {x: 2.2, y: -4.4, z: 0.0},
      {x: 2.4, y: -4.4, z: 0.0},
      {x: 2.6, y: -4.4, z: 0.0},
      {x: 2.8, y: -4.4, z: 0.0},
      {x: 3.0, y: -4.4, z: 0.0},
      {x: 3.2, y: -4.4, z: 0.0},
      {x: 3.4, y: -4.4, z: 0.0},
      {x: 1.2, y: -4.6, z: 0.0},//
      {x: 1.4, y: -4.6, z: 0.0},
      {x: 1.6, y: -4.6, z: 0.0},
      {x: 1.8, y: -4.6, z: 0.0},
      {x: 2.0, y: -4.6, z: 0.0},
      {x: 2.2, y: -4.6, z: 0.0},
      {x: 2.4, y: -4.6, z: 0.0},
      {x: 2.6, y: -4.6, z: 0.0},
      {x: 2.8, y: -4.6, z: 0.0},
      {x: 3.0, y: -4.6, z: 0.0},
      {x: 3.2, y: -4.6, z: 0.0},
      {x: 3.4, y: -4.6, z: 0.0},
      {x: 3.6, y: -4.6, z: 0.0},
    ];
    const kuppaColors = {
      0: 0xffffff,
      1: 0xffffff,
      2: 0xffffff,
      3: 0x009900,
      4: 0x009900,
      5: 0xffffff,
      6: 0xffffff,
      7: 0xffffff,
      8: 0x009900,
      9: 0x009900,
      10: 0x009900,
      11: 0x009900,
      12: 0xffffff,
      13: 0xffffff,
      14: 0x009900,
      15: 0x009900,
      16: 0xffffff,
      17: 0xffffff,
      18: 0x009900,
      19: 0x009900,
      20: 0x009900,
      21: 0x009900,
      22: 0x009900,
      23: 0x009900,
      24: 0x009900,
      25: 0xd19020,
      26: 0x009900,
      27: 0xffffff,
      28: 0xffffff,
      29: 0x009900,
      30: 0x009900,
      31: 0x009900,
      32: 0x009900,
      33: 0x009900,
      34: 0x009900,
      35: 0x009900,
      36: 0xd19020,
      37: 0xd19020,
      38: 0x009900,
      39: 0x009900,
      40: 0xffffff,
      41: 0xffffff,
      42: 0x009900,
      43: 0x009900,
      44: 0x009900,
      45: 0x009900,
      46: 0x009900,
      47: 0x009900,
      48: 0x009900,
      49: 0x009900,
      50: 0xd19020,
      51: 0xd19020,
      52: 0xd19020,
      53: 0xffffff,
      54: 0xffffff,
      55: 0xffffff,
      56: 0x009900,
      57: 0x009900,
      58: 0x009900,
      59: 0xd19020,
      60: 0x009900,
      61: 0x009900,
      62: 0x009900,
      63: 0x009900,
      64: 0x009900,
      65: 0xd19020,
      66: 0xd19020,
      67: 0xd19020,
      68: 0xd19020,
      69: 0xffffff,
      70: 0x009900,
      71: 0x009900,
      72: 0x009900,
      73: 0xd19020,
      74: 0xd19020,
      75: 0xd19020,
      76: 0x009900,
      77: 0x009900,
      78: 0x009900,
      79: 0x009900,
      80: 0xffffff,
      81: 0xffffff,
      82: 0xd19020,
      83: 0xd19020,
      84: 0x009900,
      85: 0x009900,
      86: 0xd19020,
      87: 0xd19020,
      88: 0xffffff,
      89: 0x009900,
      90: 0xd19020,
      91: 0x009900,
      92: 0x009900,
      93: 0x009900,
      94: 0x009900,
      95: 0xffffff,
      96: 0xffffff,
      97: 0x009900,
      98: 0x009900,
      99: 0x009900,
      100: 0xffffff,
      101: 0xffffff,
      102: 0xd19020,
      103: 0xd19020,
      104: 0xd19020,
      105: 0xd19020,
      106: 0x009900,
      107: 0x009900,
      108: 0xd19020,
      109: 0xd19020,
      110: 0x009900,
      111: 0x009900,
      112: 0x009900,
      113: 0x009900,
      114: 0xffffff,
      115: 0xffffff,
      116: 0x009900,
      117: 0x009900,
      118: 0xffffff,
      119: 0xffffff,
      120: 0xd19020,
      121: 0x009900,
      122: 0xffffff,
      123: 0xffffff,
      124: 0x009900,
      125: 0x009900,
      126: 0xd19020,
      127: 0xd19020,
      128: 0x009900,
      129: 0x009900,
      130: 0x009900,
      131: 0x009900,
      132: 0x009900,
      133: 0xffffff,
      134: 0xffffff,
      135: 0x009900,
      136: 0xffffff,
      137: 0xffffff,
      138: 0xffffff,
      139: 0xd19020,
      140: 0xd19020,
      141: 0x009900,
      142: 0xffffff,
      143: 0xffffff,
      144: 0xffffff,
      145: 0xd19020,
      146: 0xd19020,
      147: 0xd19020,
      148: 0xd19020,
      149: 0xd19020,
      150: 0xd19020,
      151: 0xd19020,
      152: 0xd19020,
      153: 0xd19020,
      154: 0x009900,
      155: 0x009900,
      156: 0x009900,
      157: 0x009900,
      158: 0xffffff,
      159: 0xffffff,
      160: 0xffffff,
      161: 0x009900,
      162: 0x009900,
      163: 0xffffff,
      164: 0xd19020,
      165: 0xd19020,
      166: 0x009900,
      167: 0x009900,
      168: 0xffffff,
      169: 0xffffff,
      170: 0xd19020,
      171: 0xd19020,
      172: 0xd19020,
      173: 0xd19020,
      174: 0xd19020,
      175: 0xd19020,
      176: 0xd19020,
      177: 0xd19020,
      178: 0x009900,
      179: 0x009900,
      180: 0x009900,
      181: 0x009900,
      182: 0xffffff,
      183: 0xffffff,
      184: 0xffffff,
      185: 0x009900,
      186: 0x009900,
      187: 0x009900,
      188: 0x009900,
      189: 0x009900,
      190: 0x009900,
      191: 0x009900,
      192: 0x009900,
      193: 0x009900,
      194: 0xd19020,
      195: 0xd19020,
      196: 0x009900,
      197: 0xffffff,
      198: 0x009900,
      199: 0x009900,
      200: 0x009900,
      201: 0x009900,
      202: 0x009900,
      203: 0x009900,
      204: 0x009900,
      205: 0x009900,
      206: 0xffffff,
      207: 0xffffff,
      208: 0xffffff,
      209: 0x009900,
      210: 0x009900,
      211: 0x009900,
      212: 0x009900,
      213: 0x009900,
      214: 0x009900,
      215: 0x009900,
      216: 0x009900,
      217: 0x009900,
      218: 0x009900,
      219: 0x009900,
      220: 0x009900,
      221: 0x009900,
      222: 0xffffff,
      223: 0x009900,
      224: 0x009900,
      225: 0x009900,
      226: 0x009900,
      227: 0x009900,
      228: 0xffffff,
      229: 0xffffff,
      230: 0xffffff,
      231: 0x009900,
      232: 0x009900,
      233: 0x009900,
      234: 0x009900,
      235: 0x009900,
      236: 0x009900,
      237: 0xffffff,
      238: 0xffffff,
      239: 0xffffff,
      240: 0x009900,
      241: 0x009900,
      242: 0x009900,
      243: 0x009900,
      244: 0x009900,
      245: 0x009900,
      246: 0x009900,
      247: 0xffffff,
      248: 0xffffff,
      249: 0xffffff,
      250: 0xffffff,
      251: 0xffffff,
      252: 0xffffff,
      253: 0x009900,
      254: 0x009900,
      255: 0xffffff,
      256: 0xffffff,
      257: 0xd19020,
      258: 0x009900,
      259: 0x009900,
      260: 0x009900,
      261: 0xffffff,
      262: 0xffffff,
      263: 0xffffff,
      264: 0x009900,
      265: 0x009900,
      266: 0x009900,
      267: 0x009900,
      268: 0x009900,
      269: 0x009900,
      270: 0xffffff,
      271: 0xffffff,
      272: 0x009900,
      273: 0x009900,
      274: 0xd19020,
      275: 0xd19020,
      276: 0x009900,
      277: 0x009900,
      278: 0x009900,
      279: 0xffffff,
      280: 0xffffff,
      281: 0x009900,
      282: 0xd19020,
      283: 0x009900,
      284: 0x009900,
      285: 0xd19020,
      286: 0xd19020,
      287: 0xd19020,
      288: 0xd19020,
      289: 0xffffff,
      290: 0x009900,
      291: 0x009900,
      292: 0x009900,
      293: 0x009900,
      294: 0x009900,
      295: 0x009900,
      296: 0x009900,
      297: 0x009900,
      298: 0xd19020,
      299: 0xd19020,
      300: 0xd19020,
      301: 0xd19020,
      302: 0xd19020,
      303: 0xffffff,
      304: 0xd19020,
      305: 0xd19020,
      306: 0xd19020,
      307: 0xffffff,
      308: 0xffffff,
      309: 0x009900,
      310: 0x009900,
      311: 0x009900,
      312: 0x009900,
      313: 0x009900,
      314: 0x009900,
      315: 0x009900,
      316: 0x009900,
      317: 0x009900,
      318: 0xffffff,
      319: 0xd19020,
      320: 0xd19020,
      321: 0xffffff,
      322: 0xd19020,
      323: 0xd19020,
      324: 0xd19020,
      325: 0xffffff,
      326: 0xd19020,
      327: 0xd19020,
      328: 0x009900,
      329: 0xffffff,
      330: 0x009900,
      331: 0x009900,
      332: 0x009900,
      333: 0xffffff,
      334: 0xffffff,
      335: 0xffffff,
      336: 0x009900,
      337: 0x009900,
      338: 0x009900,
      339: 0xd19020,
      340: 0xffffff,
      341: 0xd19020,
      342: 0xd19020,
      343: 0xd19020,
      344: 0xd19020,
      345: 0xd19020,
      346: 0xd19020,
      347: 0x009900,
      348: 0x009900,
      349: 0xffffff,
      350: 0x009900,
      351: 0x009900,
      352: 0x009900,
      353: 0xffffff,
      354: 0xffffff,
      355: 0xd19020,
      356: 0x009900,
      357: 0x009900,
      358: 0x009900,
      359: 0xd19020,
      360: 0xffffff,
      361: 0xd19020,
      362: 0xd19020,
      363: 0xd19020,
      364: 0xd19020,
      365: 0xd19020,
      366: 0xd19020,
      367: 0xffffff,
      368: 0x009900,
      369: 0x009900,
      370: 0xffffff,
      371: 0xffffff,
      372: 0x009900,
      373: 0x009900,
      374: 0x009900,
      375: 0xd19020,
      376: 0xd19020,
      377: 0x009900,
      378: 0x009900,
      379: 0xffffff,
      380: 0xffffff,
      381: 0xd19020,
      382: 0xd19020,
      383: 0xd19020,
      384: 0xd19020,
      385: 0xd19020,
      386: 0xd19020,
      387: 0x009900,
      388: 0x009900,
      389: 0x009900,
      390: 0x009900,
      391: 0xffffff,
      392: 0xffffff,
      393: 0x009900,
      394: 0x009900,
      395: 0x009900,
      396: 0x009900,
      397: 0x009900,
      398: 0x009900,
      399: 0x009900,
      400: 0xffffff,
      401: 0xffffff,
      402: 0xffffff,
      403: 0xffffff,
      404: 0xd19020,
      405: 0xd19020,
      406: 0xd19020,
      407: 0xd19020,
      408: 0xd19020,
      409: 0x009900,
      410: 0x009900,
      411: 0x009900,
      412: 0x009900,
      413: 0xffffff,
      414: 0xffffff,
      415: 0x009900,
      416: 0x009900,
      417: 0x009900,
      418: 0x009900,
      419: 0x009900,
      420: 0x009900,
      421: 0x009900,
      422: 0xd19020,
      423: 0xd19020,
      424: 0xffffff,
      425: 0xd19020,
      426: 0xd19020,
      427: 0xd19020,
      428: 0xd19020,
      429: 0x009900,
      430: 0x009900,
      431: 0x009900,
      432: 0x009900,
      433: 0x009900,
      434: 0xffffff,
      435: 0x009900,
      436: 0x009900,
      437: 0x009900,
      438: 0x009900,
      439: 0xffffff,
      440: 0xffffff,
      441: 0x009900,
      442: 0xd19020,
      443: 0x009900,
      444: 0x009900,
      445: 0x009900,
      446: 0x009900,
      447: 0x009900,
      448: 0x009900,
      449: 0xffffff,
      450: 0xffffff,
      451: 0x009900,
      452: 0x009900,
      453: 0x009900,
      454: 0xd19020,
      455: 0x009900,
      456: 0x009900,
      457: 0x009900,
      458: 0x009900,
      459: 0x009900,
      460: 0x009900,
      461: 0x009900,
      462: 0x009900,
      463: 0x009900,
      464: 0x009900,
      465: 0xffffff,
      466: 0xffffff,
      467: 0xffffff,
      468: 0x009900,
      469: 0x009900,
      470: 0x009900,
      471: 0x009900,
      472: 0x009900,
      473: 0x009900,
      474: 0x009900,
      475: 0x009900,
      476: 0x009900,
      477: 0x009900,
      478: 0x009900,
      479: 0x009900,
      480: 0xffffff,
      481: 0xffffff,
      482: 0xffffff,
      483: 0xffffff,
      484: 0xffffff,
      485: 0xffffff,
      486: 0xffffff,
      487: 0xffffff,
      488: 0xffffff,
      489: 0xd19020,
      490: 0x009900,
      491: 0x009900,
      492: 0x009900,
      493: 0x009900,
      494: 0x009900,
      495: 0x009900,
      496: 0x009900,
      497: 0xffffff,
      498: 0xffffff,
      499: 0xffffff,
      500: 0xffffff,
      501: 0xffffff,
      502: 0xffffff,
      503: 0xffffff,
      504: 0xffffff,
      505: 0xffffff,
      506: 0xd19020,
      507: 0xd19020,
      508: 0x009900,
      509: 0x009900,
      510: 0x009900,
      511: 0xd19020,
      512: 0xd19020,
      513: 0xd19020,
      514: 0xd19020,
      515: 0xffffff,
      516: 0xffffff,
      517: 0xffffff,
      518: 0xffffff,
      519: 0xffffff,
      520: 0xffffff,
      521: 0xffffff,
      522: 0xd19020,
      523: 0xd19020,
      524: 0xd19020,
      525: 0xd19020,
      526: 0xd19020,
      527: 0xd19020,
      528: 0xd19020,
      529: 0xd19020,
      530: 0xd19020,
      531: 0xd19020,
      532: 0xffffff,
      533: 0xffffff,
      534: 0xffffff,
      535: 0xffffff,
      536: 0xd19020,
      537: 0xd19020,
      538: 0xd19020,
      539: 0xffffff,
      540: 0xffffff,
      541: 0xd19020,
      542: 0xd19020,
      543: 0xd19020,
      544: 0xd19020,
      545: 0xffffff,
      546: 0xffffff,
      547: 0xffffff,
      548: 0xd19020,
      549: 0xd19020,
      550: 0xffffff,
      551: 0xffffff,
      552: 0xffffff,
      553: 0xd19020,
      554: 0xd19020,
      555: 0xd19020,
      556: 0xd19020,
      557: 0xd19020,
      558: 0xd19020,
    };
    for(let i = 0; i < kuppaCount; i++) {
      this.boxMaterial = new THREE.MeshPhongMaterial({ color: kuppaColors[i] });
      const kuppabox = new THREE.Mesh(this.boxGeometry, this.boxMaterial);
      kuppabox.position.set(kuppaPosition[i].x, kuppaPosition[i].y, kuppaPosition[i].z);
      this.kuppa.add(kuppabox);
    }
    this.kuppa.scale.setScalar(.8);
    this.kuppa.scale.setScalar(ThreeApp.MOON_SCALE);
    this.kuppa.position.set(ThreeApp.MOON_DISTANCE, 0.0, 0.0);

    // コントロール
    this.controls = new OrbitControls(this.camera, this.renderer.domElement);

    // ヘルパー
    const axesBarLength = 5.0;
    this.axesHelper = new THREE.AxesHelper(axesBarLength);
    this.scene.add(this.axesHelper);

    // キーの押下状態を保持するフラグ
    this.isDown = false;

    // Clock オブジェクトの生成
    this.clock = new THREE.Clock();
  }

  /**
   * 描画処理
   */
  render() {
    // 恒常ループ
    requestAnimationFrame(this.render);

    // コントロールを更新
    this.controls.update();

    const previousDirection = this.marioDirection.clone();

    // 人工衛星は月を自動追尾する
    // (終点 - 始点) という計算を行うことで、２点間を結ぶベクトルを定義
    const subVector = new THREE.Vector3().subVectors(this.kuppa.position, this.mario.position);
    // 長さに依存せず、向きだけを考えたい場合はベクトルを単位化する
    subVector.normalize();
    // 人工衛星の進行方向ベクトルに、向きベクトルを小さくスケールして加算する @@@
    this.marioDirection.add(subVector.multiplyScalar(ThreeApp.SATELLITE_TURN_SCALE));
    // 加算したことでベクトルの長さが変化するので、単位化してから人工衛星の座標に加算する
    this.marioDirection.normalize();
    const direction = this.marioDirection.clone();
    this.mario.position.add(direction.multiplyScalar(ThreeApp.SATELLITE_SPEED));

    const normalAxis = new THREE.Vector3().crossVectors(previousDirection, this.marioDirection);
    normalAxis.normalize();

    const cos = previousDirection.dot(this.marioDirection);
    const radians = Math.acos(cos);
    const qtn = new THREE.Quaternion().setFromAxisAngle(normalAxis, radians);
    this.mario.quaternion.premultiply(qtn);

    // レンダラーで描画
    this.renderer.render(this.scene, this.camera);
  }
}
